export declare const typeKindMap: {
    readonly d: "domain";
    readonly e: "enum";
    readonly r: "range";
};
type TypeKind = (typeof typeKindMap)[keyof typeof typeKindMap];
export declare const classKindMap: {
    readonly r: "table";
    readonly p: "table";
    readonly v: "view";
    readonly m: "materializedView";
    readonly c: "compositeType";
    readonly f: "foreignTable";
};
type ClassKind = (typeof classKindMap)[keyof typeof classKindMap];
export type Kind = TypeKind | ClassKind;
/**
 * Base type for Postgres objects.
 */
type PgType<K extends Kind = Kind> = {
    /**
     * The name of the object.
     */
    name: string;
    /**
     * The name of the schema that the object is in.
     */
    schemaName: string;
    /**
     * The kind of the object.
     */
    kind: K;
    /**
     * The comment on the object, if any.
     */
    comment: string | null;
};
export default PgType;
